-- Test errors/invalid inputs
CREATE FOREIGN TABLE ttl_stream (x integer) SERVER pipelinedb;
-- TTLs must be at least 1 second
CREATE VIEW ttl0 WITH (ttl='1 millisecond', ttl_column='ts')
	AS SELECT arrival_timestamp AS ts, x FROM ttl_stream;
ERROR:  ttl must be a minimum of 1 second
-- Invalid interval
CREATE VIEW ttl0 WITH (ttl='not an interval', ttl_column='ts')
	AS SELECT arrival_timestamp AS ts, x FROM ttl_stream;
ERROR:  invalid input syntax for type interval: "not an interval"
-- No ttl_column
CREATE VIEW ttl0 WITH (ttl='4 days')
	AS SELECT arrival_timestamp AS ts, x FROM ttl_stream;
ERROR:  ttl_column must be specified in conjunction with ttl
-- No ttl
CREATE VIEW ttl0 WITH (ttl_column='ts')
	AS SELECT arrival_timestamp AS ts, x FROM ttl_stream;
ERROR:  ttl must be specified in conjunction with ttl_column
-- Wrong types
CREATE VIEW ttl0 WITH (ttl='1 day', ttl_column=1)
	AS SELECT arrival_timestamp AS ts, x FROM ttl_stream;
ERROR:  ttl_column must be expressed as a column name
CREATE VIEW ttl0 WITH (ttl=10000, ttl_column='ts')
	AS SELECT arrival_timestamp AS ts, x FROM ttl_stream;
ERROR:  ttl must be expressed as an interval
-- TTL column isn't a timestamp or timestamptz
CREATE VIEW ttl0 WITH (ttl='1 day', ttl_column='x')
	AS SELECT x FROM ttl_stream;
ERROR:  ttl_column must refer to a timestamp or timestamptz column
-- Can't specify TTLs with SWs
CREATE VIEW ttl0 WITH (ttl='1 day', ttl_column='ts', sw='2 days')
	AS SELECT arrival_timestamp AS ts, x FROM ttl_stream;
ERROR:  TTLs cannot be specified in conjunction with sliding windows
-- Implicit SW expression
CREATE VIEW ttl0 WITH (ttl='3 seconds')
	AS SELECT arrival_timestamp AS ts, x FROM ttl_stream
WHERE arrival_timestamp > clock_timestamp() - interval '1 hour';
ERROR:  ttl_column must be specified in conjunction with ttl
CREATE VIEW ttl0 WITH (ttl='3 seconds', ttl_column = 'ts')
	AS SELECT arrival_timestamp AS ts, x FROM ttl_stream
WHERE arrival_timestamp > clock_timestamp() - interval '1 hour';
ERROR:  TTLs cannot be specified in conjunction with sliding windows
CREATE VIEW ttl0 WITH (ttl='3 seconds', ttl_column='ts')
	AS SELECT arrival_timestamp AS ts, x FROM ttl_stream;
CREATE VIEW ttl1 WITH (ttl='1 month', ttl_column='ts')
	AS SELECT arrival_timestamp AS ts, x FROM ttl_stream;
SELECT c.relname, ttl, ttl_attno FROM pipelinedb.cont_query cq
JOIN pg_class c ON c.oid = cq.relid WHERE c.relname IN ('ttl0', 'ttl1')
ORDER BY c.relname;
 relname |   ttl   | ttl_attno 
---------+---------+-----------
 ttl0    |       3 |         1
 ttl1    | 2592000 |         1
(2 rows)

INSERT INTO ttl_stream (x) VALUES (0);
INSERT INTO ttl_stream (x) VALUES (1);
INSERT INTO ttl_stream (x) VALUES (2);
SELECT x, "$pk" FROM ttl0_mrel ORDER BY ts;
 x | $pk 
---+-----
 0 |   1
 1 |   2
 2 |   3
(3 rows)

SELECT pg_sleep(3);
 pg_sleep 
----------
 
(1 row)

SELECT 0 * pipelinedb.ttl_expire('ttl0');
 ?column? 
----------
        0
(1 row)

SELECT x, "$pk" FROM ttl0_mrel ORDER BY ts;
 x | $pk 
---+-----
(0 rows)

INSERT INTO ttl_stream (x) VALUES (0);
INSERT INTO ttl_stream (x) VALUES (1);
INSERT INTO ttl_stream (x) VALUES (2);
SELECT x, "$pk" FROM ttl0_mrel ORDER BY ts;
 x | $pk 
---+-----
 0 |   4
 1 |   5
 2 |   6
(3 rows)

SELECT pg_sleep(3);
 pg_sleep 
----------
 
(1 row)

SELECT 0 * pipelinedb.ttl_expire('ttl0');
 ?column? 
----------
        0
(1 row)

SELECT x, "$pk" FROM ttl0_mrel ORDER BY ts;
 x | $pk 
---+-----
(0 rows)

SELECT x, "$pk" FROM ttl1_mrel ORDER BY ts;
 x | $pk 
---+-----
 0 |   1
 1 |   2
 2 |   3
 0 |   4
 1 |   5
 2 |   6
(6 rows)

DROP VIEW ttl0;
DROP VIEW ttl1;
CREATE VIEW ttl2 AS SELECT arrival_timestamp AS ts, x FROM ttl_stream;
CREATE VIEW ttl3 WITH (sw = '1 second') AS SELECT count(*) FROM ttl_stream;
-- Can't change the TTL of a SW CV
SELECT pipelinedb.set_ttl('ttl3', '1 day', 'count');
ERROR:  the ttl of a sliding-window continuous view cannot be changed
DROP VIEW ttl3;
-- Bad CV names
SELECT pipelinedb.set_ttl(NULL, '1 day', 'x');
ERROR:  continuous view name is null
SELECT pipelinedb.set_ttl('does_not_exist', '1 day', 'x');
ERROR:  continuous view "does_not_exist" does not exist
-- Bad interval
SELECT pipelinedb.set_ttl('ttl2', 'not an interval', 'x');
ERROR:  invalid input syntax for type interval: "not an interval"
LINE 1: SELECT pipelinedb.set_ttl('ttl2', 'not an interval', 'x');
                                          ^
-- Bad column name
SELECT pipelinedb.set_ttl('ttl2', '1 day', 'does not exist');
ERROR:  column "does not exist" does not exist
SELECT pipelinedb.set_ttl('ttl2', '1 day', 'x');
ERROR:  ttl_column must refer to a timestamp or timestamptz column
-- Ok, now verify legitimate invocations
SELECT pipelinedb.set_ttl('ttl2', '5 seconds', 'ts');
 set_ttl 
---------
 (5,1)
(1 row)

INSERT INTO ttl_stream (x) VALUES (2);
INSERT INTO ttl_stream (x) VALUES (2);
SELECT x FROM ttl2 ORDER BY ts;
 x 
---
 2
 2
(2 rows)

SELECT pg_sleep(6);
 pg_sleep 
----------
 
(1 row)

SELECT 0 * pipelinedb.ttl_expire('ttl2');
 ?column? 
----------
        0
(1 row)

SELECT x FROM ttl2 ORDER BY ts;
 x 
---
(0 rows)

SELECT pipelinedb.set_ttl('ttl2', '1 second', 'ts');
 set_ttl 
---------
 (1,1)
(1 row)

INSERT INTO ttl_stream (x) VALUES (2);
INSERT INTO ttl_stream (x) VALUES (2);
SELECT x FROM ttl2 ORDER BY ts;
 x 
---
 2
 2
(2 rows)

SELECT pg_sleep(2);
 pg_sleep 
----------
 
(1 row)

SELECT 0 * pipelinedb.ttl_expire('ttl2');
 ?column? 
----------
        0
(1 row)

SELECT x FROM ttl2 ORDER BY ts;
 x 
---
(0 rows)

-- No verify we can remove a TTL
SELECT pipelinedb.set_ttl('ttl2', null, null);
 set_ttl 
---------
 (-1,0)
(1 row)

INSERT INTO ttl_stream (x) VALUES (2);
INSERT INTO ttl_stream (x) VALUES (2);
SELECT 0 * pipelinedb.ttl_expire('ttl2');
ERROR:  continuous view "ttl2" does not have a TTL
SELECT x FROM ttl2 ORDER BY ts;
 x 
---
 2
 2
(2 rows)

DROP VIEW ttl2;
-- #1881 regression test
CREATE VIEW "MyTTLCV" WITH (ttl = '1 second', ttl_column = 'second') AS
  SELECT second(arrival_timestamp), count(*) FROM ttl_stream GROUP BY second;
INSERT INTO ttl_stream (x) VALUES (2);
INSERT INTO ttl_stream (x) VALUES (2);
SELECT pg_sleep(1.1);
 pg_sleep 
----------
 
(1 row)

SELECT 0 * pipelinedb.ttl_expire('"MyTTLCV"');
 ?column? 
----------
        0
(1 row)

DROP VIEW "MyTTLCV";
DROP FOREIGN TABLE ttl_stream CASCADE;
